package camelcase.searchemall

import android.os.Bundle
import android.support.v7.app.AppCompatActivity
import android.widget.ArrayAdapter
import kotlinx.android.synthetic.main.activity_main.*
import kotlinx.android.synthetic.main.container_layout.*
import java.io.File

// TODO file url handling
// TODO fullscreen video support
// TODO Proper UI implementation

class MainActivity : AppCompatActivity() {

    private var webSearchArray = ArrayList<SearchEngineProperties>()
    private var imageSearchArray = ArrayList<SearchEngineProperties>()
    private var videoSearchArray = ArrayList<SearchEngineProperties>()
    private var bookSearchArray = ArrayList<SearchEngineProperties>()
    private var torrentSearchArray = ArrayList<SearchEngineProperties>()

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main)
        nestedScrollView.isFillViewport = true

        initSpinner()

        val fileDownloadTask = FileDownloadTask(this)
        fileDownloadTask.start() // downloads a file if does not exists.
        val file = initFile()

        val fileToString = getFileString(file)
        val myJsonHandler = MyJsonHandler(fileToString)

        webSearchArray = myJsonHandler.getSearchList("web")
        imageSearchArray = myJsonHandler.getSearchList("images")
        videoSearchArray = myJsonHandler.getSearchList("videos")
        bookSearchArray = myJsonHandler.getSearchList("books")
        torrentSearchArray = myJsonHandler.getSearchList("torrents")

        perform_search.setOnClickListener {
            appbar.setExpanded(false)
            replaceFragment()
        }
    }

    // Simple function to test the arrays generated by jsonArray
    private fun testArray(arrayList: ArrayList<SearchEngineProperties>) {
        for (i in arrayList) {
            println("${i.name},${i.url},${i.enableJs}")
        }
    }

    // populate spinner with entries
    private fun initSpinner() {
        val arrayAdapter:ArrayAdapter<CharSequence> =
                ArrayAdapter.createFromResource(this,R.array.search_scopes,R.layout.spinner_item)
        arrayAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item)
        search_scope.adapter = arrayAdapter
    }

    // add viewpager fragment to container
    private fun replaceFragment() {
        val fm = supportFragmentManager
        val ft = fm.beginTransaction()
        val viewpagerFragment = FragmentViewPager()
        viewpagerFragment.pageData = torrentSearchArray
        ft.replace(R.id.container,viewpagerFragment)
        ft.commit()
    }

    // get file as a string. Useful for files with text inside.
    private fun getFileString(file: File): String {
        return file.inputStream().bufferedReader().use { it.readText() }
    }

    // Initialize file in internal storage/Android/data/package/cache directory
    private fun initFile(): File {
        val filename = getString(R.string.search_scopes_file_name)
        return File(externalCacheDir, filename)
    }
}
